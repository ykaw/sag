#!/bin/sh

#  rorate  -  Re-archiving files and split raw data file
#
#  $Id: rotate,v 1.21 2023/07/09 16:07:32 kaw Exp $

cd $SAGHOME/var || exit 1

. $SAGHOME/conf/shconf.sh || exit 1

for period in $(echo $targets | tr -sc 0-9 '\012' | sort | uniq); do

    # remove expired files
    #
    expfiles=$(ls -1d rl${period}-????????.gz | wc -l)
    if [[ 0 -lt $rotate_max && 0 -lt $expfiles ]]; then
	if [[ $rotate_max -lt $expfiles ]]; then
	    ls -1d rl${period}-????????.gz | head -n $((expfiles - rotate_max)) | xargs rm -f
	fi
    fi

    # create yesterday's file to archive
    #        today's older file
    #        today's newer file (null file now)
    #
    mv -f rl${period}-000 rl${period}_tmp1  # data before yesterday's split_byday
    mv -f rl${period}     rl${period}_tmp2  # data after yesterday's split_byday (today's data included)
    touch rl${period}                       # new file to update later


    # split data in two - yesterday's data and today's data
    cat rl${period}_tmp1 rl${period}_tmp2 | ../bin/split_byday $rl${period}_tmp3 rl${period}-000

    # find and set (last) timestamp
    #
    set -- $(zgrep '^=dt [1-9][0-9][0-9][0-9] [0-9][0-9] [0-9][0-9] [0-9][0-9] [0-9][0-9]$' "${period}_tmp3" | tail -n 1)
    daytime="$2$3$4"  # YYYYMMDD

    # set file name to archive: rlPPPP-YYYYMMDD - the date is yesterday
    #
    if [[ -n "$daytime" ]]; then
        arcfile=rl${period}-$daytime
    else
        # no timestamp in the logfile
        arcfile=rl${period}-$(date -r $(($(date +%s)-86400)) +%Y%m%d)
    fi
    mv ${period}_tmp3 $arcfile

    gzip -9 $arcfile
    rm -f rl${period}_tmp1 rl${period}_tmp2
done

../bin/mkoldsum
